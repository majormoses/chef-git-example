# Rubocop,  we're buddies and all,  but we're going to have to disagree on the following

# Allow compact class definitions
Style/ClassAndModuleChildren:
  Enabled: false

# Allow if statements!
Style/GuardClause:
  Enabled: false

# trailing commas are a matter of preferance
# I prefer them for vcs diff reasons
Style/TrailingCommaInHashLiteral:
  Enabled: true
Style/TrailingCommaInArrayLiteral:
  Enabled: true


# Disable requirement of "encoding" headers on files
Encoding:
  Enabled: false

# Longer classes aren't _so_ bad
Metrics/ClassLength:
  Max: 125

# Increase allowed lines in a method.  Short methods are good, but 10 lines
#   is a bit too low.
MethodLength:
  CountComments: false  # count full line comments?
  Max: 40

# Favor explicit over implicit code: don't complain of "redundant returns"
RedundantReturn:
  Enabled: false

# Don't complain about if/unless modifiers.  The merit of this is debatable
# and it will likely require building of over-length lines.
IfUnlessModifier:
  Enabled: false

# Don't force a word array unless 5 elements
WordArray:
  MinSize: 5

# Don't complain about unused block args
UnusedBlockArgument:
  Enabled: false

# allow both hash syntaxes
Style/HashSyntax:
  Enabled: false

# allow final rescue
Style/RescueModifier:
  Enabled: false

Naming/AccessorMethodName:
  Enabled: false

# allow larger modules
Metrics/ModuleLength:
  Max: 150

# disable opinionated doc requirements such as a top-level class comments
Documentation:
  Enabled: false

# allow using parenthases to group an expresion
Lint/ParenthesesAsGroupedExpression:
  Enabled: false


# NumericLiterals:
#   Enabled: false

# allow multiple spaces between methofs and first arg
Layout/SpaceBeforeFirstArg:
  Enabled: false

AllCops:
  TargetRubyVersion: 2.4
